version: '3.8'

services:
  consumer:
    image: consumer  # Asegúrate de que el nombre de la imagen coincida
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - app-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093  # Conexión al servicio Kafka correctamente
    depends_on:
      - kafka

  producer:
    image: producer  # Asegúrate de que el nombre de la imagen coincida
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - app-network
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9093  # Conexión al servicio Kafka correctamente
    depends_on:
      - kafka

  node:
    image: node-app  # Asegúrate de que el nombre de la imagen coincida
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    ports:
      - "3001:3000"  # Cambié el puerto externo para evitar el conflicto
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka:latest
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_INTERNAL: INSIDE://kafka:9093
      KAFKA_LISTENER_EXTERNAL: OUTSIDE://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  zookeeper:
    image: wurstmeister/zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_LISTENER_PORT: 2181
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

networks:
  app-network:
    driver: bridge
